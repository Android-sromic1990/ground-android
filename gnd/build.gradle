/*
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

project.ext {
    autoDisposeVersion = "0.8.0"
    autoValueVersion = "1.6"
    supportLibraryVersion = "28.0.0-alpha1"
    daggerVersion = "2.14.1"
    butterKnifeVersion = "8.8.1"
    rxJavaVersion = "2.1.6"
    rxAndroidVersion = "2.0.1"
    rxFirebaseVersion = "1.4.1"
    rxJava2DebugVersion = "1.2.2"
    rxBindingVersion = "2.1.1"
    lifecycleVersion = "1.1.1"
    gmsVersion = "11.8.0"
    firebaseVersion = "11.8.0"
    junitVersion = "4.12"
    constraintLayoutVersion = "1.0.2"
    streamSupportVersion = "1.6.0"
    tabLayoutHelper = "0.9.0"
    guavaVersion = "23.0-android"
}

def homePath = System.properties['user.home']

android {
    compileSdkVersion "android-P"
    defaultConfig {
        // https://developer.android.com/about/dashboards/index.html for reference.
        applicationId "com.google.android.gnd"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }
    // Keep the following configuration in order to target Java 8.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        // For com_google_android_gms_fonts_certs_(dev|prod), which causes lint errors.
        disable 'MissingTranslation'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:multidex:1.0.1'

    // Android Support Libraries.
    implementation "com.android.support:support-v4:$project.supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$project.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$project.supportLibraryVersion"
    implementation "com.android.support:design:$project.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:" +
            "$project.constraintLayoutVersion"
    implementation "net.sourceforge.streamsupport:streamsupport-cfuture:" +
            "$project.streamSupportVersion"
    // For dynamic tab bar style.
    implementation "com.h6ah4i.android.tablayouthelper:tablayouthelper:$project.tabLayoutHelper"
    implementation "com.google.android.gms:play-services-maps:$project.gmsVersion"
    implementation "com.google.android.gms:play-services-location:$project.gmsVersion"

    // Firebase and related libraries.
    implementation "com.google.firebase:firebase-core:$project.firebaseVersion"
    implementation "com.google.firebase:firebase-firestore:$project.firebaseVersion"
    implementation "com.github.frangsierra:rx2firebase:$project.rxFirebaseVersion"

    // Dagger core
    annotationProcessor "com.google.dagger:dagger-compiler:$project.daggerVersion"
    implementation "com.google.dagger:dagger:$project.daggerVersion"

    // Dagger Android
    annotationProcessor "com.google.dagger:dagger-android-processor:$project.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$project.daggerVersion"

    // ButterKnife
    implementation "com.jakewharton:butterknife:$project.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$project.butterKnifeVersion"

    // ReactiveX
    implementation "io.reactivex.rxjava2:rxjava:$project.rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$project.rxAndroidVersion"
    implementation "com.akaita.java:rxjava2-debug:$project.rxJava2DebugVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding:$project.rxBindingVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding-support-v4:$project.rxBindingVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$project.rxBindingVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding-design:$project.rxBindingVersion"

    // Android Arch Lifecycle
    implementation "android.arch.lifecycle:runtime:$project.lifecycleVersion"
    implementation "android.arch.lifecycle:extensions:$project.lifecycleVersion"
    implementation "android.arch.lifecycle:reactivestreams:$project.lifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$project.lifecycleVersion"

    // Auto-value
    provided "com.google.auto.value:auto-value-annotations:$project.autoValueVersion"
    annotationProcessor "com.google.auto.value:auto-value:$project.autoValueVersion"

    // Guava
    implementation "com.google.guava:guava:$project.guavaVersion"

    // Testing
    testImplementation "junit:junit:$project.junitVersion"

    implementation "com.uber.autodispose:autodispose-android:$project.autoDisposeVersion"
    implementation "com.uber.autodispose:autodispose-android-archcomponents:$project.autoDisposeVersion"
}

// This must be last to avoid dependency collisions.
// https://developers.google.com/android/guides/google-services-plugin#introduction
apply plugin: 'com.google.gms.google-services'